/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/css/style.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/css/style.css ***!
  \*****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/getUrl.js */ \"./node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ../img/background_mouse.jpg */ \"./src/img/background_mouse.jpg\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! ../img/background_references.jpg */ \"./src/img/background_references.jpg\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! ../img/background_contact.jpg */ \"./src/img/background_contact.jpg\"), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"*{\\r\\n    box-sizing: border-box;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\nbody{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-height: 100vh;\\r\\n    font-family: \\\"roboto\\\", sans-serif;\\r\\n    font-style: normal;\\r\\n    font-size: 16px;\\r\\n    background-color: #EFEFEF\\r\\n}\\r\\n\\r\\nimg{\\r\\n    display:block;\\r\\n    height: auto;\\r\\n    width: auto;\\r\\n}\\r\\n\\r\\nh1{\\r\\n    font-size: 3rem;\\r\\n    color: #EFEFEF;\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\\r\\nh2{\\r\\n    color: #EFEFEF;\\r\\n    text-align: center;\\r\\n    text-transform: uppercase;\\r\\n    font-weight: bold;\\r\\n    padding: 2rem 4rem;\\r\\n    font-size: 2rem;\\r\\n    letter-spacing: 0.3rem;\\r\\n\\r\\n\\r\\n     background: rgba(255, 255, 255, 0.2); /* Set the background color with transparency */\\r\\n    backdrop-filter: blur(10px); /* Apply a blur effect to create the frosted glass effect */\\r\\n    -webkit-backdrop-filter: blur(10px); /* For Safari compatibility */\\r\\n    border-radius: 1.5rem; /* Add border radius for rounded corners */\\r\\n}\\r\\n\\r\\nh3{\\r\\n    color: #FF6600;\\r\\n    padding-top:1.5rem;\\r\\n}\\r\\n\\r\\nh4{\\r\\n    color:#002677 ;\\r\\n    padding: 0.5rem 0 0 0 ;\\r\\n}\\r\\n\\r\\n\\r\\n/* HEADER */\\r\\nheader{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\nnav{\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    background-color: #FFFFFF;\\r\\n    z-index: 3;\\r\\n    box-shadow: 0 0 5px 0 #a7a6a6;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.menu_container{\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    width: 70%;\\r\\n}\\r\\n\\r\\n.logo{\\r\\n    height:5rem;\\r\\n    width: auto;\\r\\n    padding: 0.7rem;\\r\\n}\\r\\n\\r\\n.logo_container{\\r\\n    display:flex;\\r\\n    align-content: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n\\r\\n.menu{\\r\\n    list-style: none;\\r\\n    display:flex;\\r\\n    justify-content: flex-end;\\r\\n    width: 100%;\\r\\n    height: 4rem;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.menu li{\\r\\n    display:flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.menu_item{\\r\\n    display: block;\\r\\n    overflow-wrap:break-word;\\r\\n    text-decoration: none;\\r\\n    font-size: 1.2rem;\\r\\n    text-transform: uppercase;\\r\\n    text-decoration: none;\\r\\n    font-weight: 600;\\r\\n    color: #002677;\\r\\n    margin-bottom: 0.5rem;\\r\\n    padding: 1rem 2rem 0.5rem 2rem;\\r\\n\\r\\n}\\r\\n\\r\\n.menu_item:hover{\\r\\n    transition-delay: 150ms;\\r\\n    color: #FF6600;\\r\\n    \\r\\n}\\r\\n\\r\\n.active{\\r\\n    color: #FF6600;\\r\\n    border-bottom: 1px solid #FF6600;\\r\\n}\\r\\n\\r\\n/* MAIN */\\r\\nmain{\\r\\n    flex-grow: 1;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    \\r\\n}\\r\\n\\r\\nsection{\\r\\n    width: 70%;\\r\\n    min-height: 65vh;\\r\\n    margin: 1.5rem auto 3rem auto;\\r\\n}\\r\\n\\r\\n.spacer_severity{\\r\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n    background-attachment: fixed;\\r\\n    min-height: 100vh;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: flex-end;\\r\\n}\\r\\n\\r\\n.intro{\\r\\n    margin: 10rem 20rem 0 0rem;\\r\\n    width: 70%;\\r\\n    background: rgba(255, 255, 255, 0.2); /* Set the background color with transparency */\\r\\n    backdrop-filter: blur(10px); /* Apply a blur effect to create the frosted glass effect */\\r\\n    -webkit-backdrop-filter: blur(10px); /* For Safari compatibility */\\r\\n    border-radius: 1.5rem; /* Add border radius for rounded corners */\\r\\n    padding: 4rem;\\r\\n}\\r\\n\\r\\n.intro_text{\\r\\n    color: #EFEFEF;\\r\\n    font-size: 1.2rem;\\r\\n    padding: 3rem 0;\\r\\n    line-height: 150%;\\r\\n}\\r\\n\\r\\n.ctas{\\r\\n    display:flex;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.ctas a{\\r\\n    text-align: center;\\r\\n    width: 45%;\\r\\n    text-decoration: none;\\r\\n    font-size: 1.2rem;\\r\\n    background-color: #002677;\\r\\n    color: #EFEFEF;\\r\\n    padding: 1.5rem 1.5rem;\\r\\n    text-transform: uppercase;\\r\\n    font-weight: bold;\\r\\n    border-radius: 2rem;\\r\\n}\\r\\n\\r\\n.ctas a:hover, .ctas a:active{\\r\\n    background-color: #FF6600;\\r\\n    cursor: pointer;\\r\\n    transform: scale(105%);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    /* SEVERITY ASSESSMENT */\\r\\n    .spacer_severity_page{\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n        align-items: center;\\r\\n        background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\r\\n        background-repeat: no-repeat;\\r\\n        background-size: cover;\\r\\n        background-attachment: fixed;\\r\\n        background-position: 60%;\\r\\n        height: 25vh;\\r\\n        display: flex;\\r\\n    }\\r\\n\\r\\n    .severity_assessment{\\r\\n        min-height: 100vh;\\r\\n        width:50%;\\r\\n    }\\r\\n    \\r\\n    .severity_cont{\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        background-color: white;\\r\\n        padding: 3rem;\\r\\n        border-radius: 2rem;\\r\\n        border-color: #888;\\r\\n        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.19);\\r\\n    }\\r\\n    \\r\\n    form{\\r\\n        min-width: 50%;\\r\\n    }\\r\\n    form  div{\\r\\n        padding: 0.7rem 0;\\r\\n    }\\r\\n\\r\\n    .results_instr{\\r\\n        padding : 1rem 0;\\r\\n        text-align: center;\\r\\n        color: #002677;\\r\\n        font-size: 1.2rem;\\r\\n    }\\r\\n\\r\\n    .select-cont{\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        padding: 0.5rem;\\r\\n    }\\r\\n\\r\\n    select{\\r\\n        padding: 0.5rem;\\r\\n        margin-top: 0.5rem;\\r\\n        min-width: 50%;\\r\\n        font-size: 1rem;\\r\\n        color: #002677;\\r\\n    }\\r\\n\\r\\n    select:focus{\\r\\n        border:1px solid #FF6600;\\r\\n    }\\r\\n    \\r\\n    select option{\\r\\n        color: #002677;\\r\\n    }\\r\\n\\r\\n    .radio-cont{\\r\\n        align-items: center;\\r\\n        padding: 0.5rem;\\r\\n    }\\r\\n\\r\\n    .radioContainer{ /* the class that is added to the cont that wraps inp and label */\\r\\n        display: flex;\\r\\n        flex-direction:row;\\r\\n        flex-wrap: nowrap;\\r\\n    }\\r\\n\\r\\n    input[type=\\\"radio\\\"]{\\r\\n        align-self: baseline;\\r\\n        margin-top: 5px;\\r\\n    }\\r\\n\\r\\n    .radio-cont label{\\r\\n       padding-left: 0.5rem;\\r\\n       \\r\\n    }\\r\\n\\r\\n    /* buttons */\\r\\n    .form_buttons{\\r\\n        display:flex;\\r\\n        justify-content: center;\\r\\n    }\\r\\n\\r\\n    #getSeverity, #reset{\\r\\n        padding: 1rem 2rem;\\r\\n        margin: 0 1rem 0 0;\\r\\n        text-transform: uppercase;\\r\\n        font-weight: bold;\\r\\n        border-radius: 0.5rem;\\r\\n    }\\r\\n\\r\\n    #getSeverity{\\r\\n        background-color: #002677;\\r\\n        color: #EFEFEF;\\r\\n        border: 3px solid #002677;\\r\\n        position: relative;\\r\\n    }\\r\\n\\r\\n    #getSeverity:hover, #getSeverity:active{\\r\\n        color: #EFEFEF;\\r\\n        background-color: #FF6600;\\r\\n        border: 3px solid #FF6600;\\r\\n        cursor: pointer;\\r\\n        transform: scale(110%);\\r\\n    }\\r\\n\\r\\n    #reset{\\r\\n        color: #002677;\\r\\n        border: 2px solid #002677;\\r\\n        background-color: white;\\r\\n    }\\r\\n\\r\\n    #reset:hover{\\r\\n        background-color: #FF6600;\\r\\n        border: 2px solid #FF6600;\\r\\n        color: #EFEFEF;\\r\\n        cursor: pointer;\\r\\n        transform: scale(110%);\\r\\n    }\\r\\n\\r\\n    #reset:active{\\r\\n        background-color: #FF6600;\\r\\n        border: 2px solid #FF6600;\\r\\n        color: #EFEFEF;\\r\\n        cursor: pointer;\\r\\n        transform: scale(110%);\\r\\n    }\\r\\n\\r\\n\\r\\n    /* The Modal*/\\r\\n    .modal {\\r\\n        display: block; /* Hidden by default */\\r\\n        position: fixed; /* Stay in place */\\r\\n        z-index: 1; /* Sit on top */\\r\\n        left: 0;\\r\\n        top: 0;\\r\\n        width: 100%; /* Full width */\\r\\n        height: 100%; /* Full height */\\r\\n        overflow: auto; /* Enable scroll if needed */\\r\\n        background-color: rgba(0,0,0,0.7); /* Black w/ opacity */\\r\\n        padding: 6rem 10rem;\\r\\n        border-radius: 2rem;\\r\\n    }\\r\\n    \\r\\n    /* Modal Content */\\r\\n    .modal-content {\\r\\n        position: relative;\\r\\n        background-color: #E3F1FF;\\r\\n        margin: auto;\\r\\n        padding: 0;\\r\\n        border: 1px solid #888;\\r\\n        width: 80%;\\r\\n        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\\r\\n    }\\r\\n    \\r\\n    /* Modal Header */\\r\\n    .modal-header {\\r\\n        display: flex;\\r\\n        padding: 2px 16px;\\r\\n        width: 100%;\\r\\n        background-color: #002677;\\r\\n        color: #FF6600;\\r\\n        font-weight: 600;\\r\\n        text-align: center;\\r\\n    }\\r\\n\\r\\n    /* The Close Button */\\r\\n      .close {\\r\\n          color: #EFEFEF;\\r\\n          float: right;\\r\\n          position:absolute;\\r\\n          right: 2rem;\\r\\n          font-size: 3rem;\\r\\n          font-weight: bold;\\r\\n          align-self: baseline;\\r\\n      }\\r\\n    \\r\\n      .close:hover,\\r\\n      .close:focus {\\r\\n          color: #FF6600;\\r\\n          text-decoration: none;\\r\\n          cursor: pointer;\\r\\n      }\\r\\n\\r\\n    /* Modal Body */\\r\\n    .modal-body {\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n    }\\r\\n    \\r\\n    .severity-score{\\r\\n        flex-grow: 1;\\r\\n    }\\r\\n\\r\\n    .severity-score h3{\\r\\n        color: #EFEFEF;\\r\\n    }\\r\\n\\r\\n    .severity-score p{\\r\\n        letter-spacing: 0.2rem;\\r\\n        text-transform: uppercase;\\r\\n        font-size: 2.5rem;\\r\\n    }\\r\\n\\r\\n    .selections, .comments{\\r\\n        min-width: 50%;\\r\\n        padding: 0 3rem;\\r\\n    }\\r\\n\\r\\n    .selections h3, .comments h3{\\r\\n        color: #002677;\\r\\n        font-size: 1.2rem;\\r\\n        font-weight: bold;\\r\\n        padding-bottom: 1rem;\\r\\n    }\\r\\n\\r\\n    .selections h4, .comments h4{\\r\\n        color: #002677;\\r\\n        font-size: 1rem;\\r\\n        margin-bottom: 0;\\r\\n        padding-top: 0;\\r\\n    }\\r\\n\\r\\n    .selections p, .comments p{\\r\\n        font-size: 1.2rem;\\r\\n    }\\r\\n\\r\\n    /* modal footer */\\r\\n    .modal-footer{\\r\\n        color: #002677;\\r\\n        font-size: 0.8rem;\\r\\n        font-style: italic;\\r\\n        text-align: center;\\r\\n        border-top: none;\\r\\n        padding: 0 2rem 1rem 2rem;\\r\\n    }\\r\\n     \\r\\n   \\r\\n\\r\\n\\r\\n/* REFERENCES */\\r\\n    .spacer_references{\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n        align-items: center;\\r\\n        background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\r\\n        background-repeat: no-repeat;\\r\\n        background-size: cover;\\r\\n        background-attachment: fixed;\\r\\n        height: 25vh;\\r\\n    }\\r\\n\\r\\n    .card-container{\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n        flex-wrap: wrap;\\r\\n    }\\r\\n\\r\\n    .card-link{\\r\\n        text-decoration: none;\\r\\n        color: black;\\r\\n    }\\r\\n\\r\\n    .card{\\r\\n        padding: 1rem 1rem;;\\r\\n        margin: 1rem;\\r\\n        max-width: 30%;\\r\\n        border-radius: 1rem;;\\r\\n    }\\r\\n\\r\\n    .card:hover, .card:active{\\r\\n        border: 1px solid #FF6600;\\r\\n        transform: scale(105%);\\r\\n    }\\r\\n\\r\\n    .card-img-top{\\r\\n        display: block;\\r\\n        max-width: 50%;\\r\\n        height: auto;\\r\\n        margin: 0 auto;\\r\\n    }\\r\\n\\r\\n    .card-body{\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        justify-content: space-between;\\r\\n    }\\r\\n\\r\\n    .card-text:last-child {\\r\\n        margin: 1rem 0;\\r\\n    }\\r\\n\\r\\n    .btn-primary{\\r\\n        background-color: #002677;\\r\\n        border-color: #002677;\\r\\n    }\\r\\n\\r\\n    .btn-primary:hover,.btn-primary:active {\\r\\n        background-color: #FF6600;\\r\\n        border-color: #FF6600;\\r\\n    }\\r\\n\\r\\n\\r\\n/* CONTACT */\\r\\n    .spacer_contact{\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n        align-items: center;\\r\\n        background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \");\\r\\n        background-repeat: no-repeat;\\r\\n        background-size: cover;\\r\\n        background-attachment: fixed;\\r\\n        height: 25vh;\\r\\n    }\\r\\n\\r\\n    .contact-form{\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        max-width: 70%;\\r\\n        align-content: center;\\r\\n        margin: 0 auto;\\r\\n        background-color: #FFFFFF;\\r\\n        padding: 3rem;\\r\\n        border-radius: 2rem;\\r\\n        border-color: #888;\\r\\n        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.19);\\r\\n    }\\r\\n\\r\\n    .contact-form input,.contact-form textarea,.contact-form button {\\r\\n        padding: 0.5rem;\\r\\n        margin: 0.5rem;\\r\\n        border-radius: 0.5rem;\\r\\n        border: 1px solid #c3c3c3;\\r\\n    }\\r\\n\\r\\n    .contact-form input:focus,.contact-form textarea:focus{\\r\\n        border: 1px solid #FF6600;\\r\\n        outline: none;\\r\\n    }\\r\\n\\r\\n    .contact-form input[type ='file']{\\r\\n        border: none;\\r\\n    }\\r\\n\\r\\n    .contact-form button{\\r\\n        margin: 0 auto;\\r\\n        margin-top: 2rem;\\r\\n        background-color: #002677;\\r\\n        color: #FFFFFF;\\r\\n        padding: 1rem 1rem;\\r\\n        border-radius: 1rem;\\r\\n    }\\r\\n\\r\\n    .contact-form button:hover, .contact-form button:active{\\r\\n        background-color: #FF6600;\\r\\n        color: #FFFFFF;\\r\\n        transform: scale(110%);\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n/* FOOTER */\\r\\nfooter{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    background-color: #002677;\\r\\n    color: #E3F1FF;\\r\\n    height: 10vh;\\r\\n    width: 100%;\\r\\n    padding: 5rem;\\r\\n}\\r\\n\\r\\nfooter p{\\r\\n    text-align: center;\\r\\n    padding: 0.5rem;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n/* JS classes */\\r\\n.hidden{\\r\\n    display:none;\\r\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/css/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./node_modules/css-loader/dist/runtime/getUrl.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/severity_assessment.csv":
/*!*************************************!*\
  !*** ./src/severity_assessment.csv ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"cbd9429f7422e5fe4b160337a83abbc5.csv\");\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/severity_assessment.csv?");

/***/ }),

/***/ "./src/css/style.css":
/*!***************************!*\
  !*** ./src/css/style.css ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/css/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/css/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/style.css */ \"./src/css/style.css\");\n/* harmony import */ var _severity_assessment_csv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../severity_assessment.csv */ \"./src/severity_assessment.csv\");\n/* harmony import */ var _img_logo_onderzoek_jpg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../img/logo_onderzoek.jpg */ \"./src/img/logo_onderzoek.jpg\");\n/* harmony import */ var _img_vub_sponsor_logo_digitaal_jpg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../img/vub_sponsor_logo_digitaal.jpg */ \"./src/img/vub_sponsor_logo_digitaal.jpg\");\n/* harmony import */ var _img_references_logo_norecopa_jpg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../img/references/logo_norecopa.jpg */ \"./src/img/references/logo_norecopa.jpg\");\n\r\n\r\n;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// console.clear();\r\nconsole.log(\"js successfully coupled\")\r\n\r\n//NAVIGATION\r\n    //  Header met navigatie verdwijnt bij naar beneden scrollen en verschijnt weer na omhoog scrollen\r\n    let beginP = window.scrollY\r\n    let nav = document.getElementsByTagName('nav');\r\n\r\n    window.addEventListener('scroll', function () {\r\n        let curP = window.scrollY\r\n\r\n    if(curP > beginP)\r\n    {\r\n        nav[0].classList.add('hidden')\r\n\r\n        beginP = curP\r\n        \r\n    }\r\n    else{\r\n        nav[0].classList.remove('hidden')\r\n    }\r\n    beginP = curP\r\n    })\r\n\r\n\r\n\r\n\r\n//MAIN\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n   \r\n    fetch(_severity_assessment_csv__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\r\n    .then(response => response.text())\r\n    .then(csvData => {\r\n        //split lines of data, store in 'lines' and assign headers based on first line\r\n      const lines = csvData.split('\\n');\r\n      const headers = lines[0].split(';');\r\n\r\n        //remove the first line and add the remaining lines as values\r\n      const procedures = lines.slice(1).map(line => {\r\n        const values = line.split(';');\r\n        const procedure = {};\r\n\r\n        headers.forEach((header, index) => {\r\n          procedure[header] = values[index];\r\n        });\r\n\r\n        return procedure;\r\n      });\r\n\r\n      // Now you have an array of procedure objects\r\n      console.log(procedures);\r\n\r\n      \r\n\r\n// Get the select elements and options containers\r\n        const selectTypeElement = document.getElementById('procedure-select');\r\n        const modelOptionsContainer = document.getElementById('model-options');\r\n        const subtypeOptionsContainer = document.getElementById('subtype-options');\r\n        const clinicalSymptomsOptionsContainer = document.getElementById('symptoms-options');\r\n        const durationOptionsContainer = document.getElementById('duration-options');\r\n        const clearButton = document.getElementById('reset')\r\n\r\n\r\n\r\n//set procedure type \r\n        \r\n        // Generate options based on procedure types\r\n        const procedureTypes = procedures.map(procedure => procedure.type);\r\n\r\n        const uniqueProcedureTypes = [...new Set(procedureTypes)];\r\n\r\n        uniqueProcedureTypes.forEach(type => {\r\n            if(type !== undefined && type !== '' ){\r\n                const option = document.createElement('option');\r\n                option.textContent = type;\r\n                option.value = type;\r\n                selectTypeElement.appendChild(option);\r\n            }\r\n\r\n        });\r\n        \r\n\r\n//set Model options \r\n    \r\n      // Event listener for procedure type selection\r\n      selectTypeElement.addEventListener('change', () => {\r\n        \r\n        // Clear previous options\r\n        modelOptionsContainer.innerHTML = '';\r\n        subtypeOptionsContainer.innerHTML = '';\r\n        clinicalSymptomsOptionsContainer.innerHTML = '';\r\n        durationOptionsContainer.innerHTML = '';\r\n\r\n        //clear results section\r\n        clearResultsCont()\r\n\r\n        // Get the selected procedure type\r\n        const selectedType = selectTypeElement.value;\r\n\r\n        // Filter procedures based on the selected type\r\n        const filteredProcedures = procedures.filter(procedure => procedure.type === selectedType);\r\n\r\n        // Extract unique values from all columns of filtered procedures\r\n        const uniqueModels = [...new Set(filteredProcedures.map(procedure => procedure.model))];\r\n        const uniqueSubtypes = [...new Set(filteredProcedures.map(procedure => procedure.subcategory))];\r\n        const uniqueClinicalSymptoms = [...new Set(filteredProcedures.map(procedure => procedure.clinicalSymptoms))];\r\n        const uniqueDurations = [...new Set(filteredProcedures.map(procedure => procedure.duration))];\r\n\r\n        //display submit button?\r\n        displayGetSeverityButton()\r\n\r\n        // Generate radio buttons for unique models\r\n        if(uniqueModels[0] !=\"\" && selectedType !== uniqueModels[0]){\r\n\r\n            //create a title for the model container\r\n            let title = document.createElement('h3');\r\n            title.textContent = 'Model'\r\n            modelOptionsContainer.appendChild(title)\r\n\r\n            uniqueModels.forEach(model => {\r\n            const radioContainer = document.createElement('div');\r\n            radioContainer.setAttribute('class', 'radioContainer')\r\n\r\n            const radioInput = document.createElement('input');\r\n            radioInput.type = 'radio';\r\n            radioInput.name = 'model';\r\n            radioInput.value = model;\r\n            radioInput.id = model;\r\n\r\n            const radioLabel = document.createElement('label');\r\n            radioLabel.textContent = model;\r\n            radioLabel.setAttribute('for', model);\r\n\r\n            radioContainer.appendChild(radioInput);\r\n            radioContainer.appendChild(radioLabel);\r\n\r\n            modelOptionsContainer.appendChild(radioContainer);\r\n            });\r\n        }else{ //if the models are empty, check if there is anything else defined\r\n\r\n            if(uniqueSubtypes[0] !=\"\"){\r\n\r\n                //create a title for the subtypes container\r\n                let title = document.createElement('h3');\r\n                title.textContent = 'Subtype'\r\n                subtypeOptionsContainer.appendChild(title)\r\n\r\n                uniqueSubtypes.forEach(subtype => {\r\n                const radioContainer = document.createElement('div');\r\n                radioContainer.setAttribute('class', 'radioContainer')\r\n    \r\n                const radioInput = document.createElement('input');\r\n                radioInput.type = 'radio';\r\n                radioInput.name = 'subtype';\r\n                radioInput.id = subtype;\r\n                radioInput.value = subtype;\r\n    \r\n                const inputLabel = document.createElement('label');\r\n                inputLabel.textContent = subtype;\r\n                inputLabel.setAttribute('for', subtype)\r\n    \r\n                radioContainer.appendChild(radioInput);\r\n                radioContainer.appendChild(inputLabel);\r\n    \r\n                subtypeOptionsContainer.appendChild(radioContainer);\r\n            });\r\n            }else{ //if subtypes are empty, check if there are clinical symptoms or subcategories\r\n                if(uniqueClinicalSymptoms[0] !=\"\"){\r\n\r\n                    //create a title for the clinical signs container\r\n                    let title = document.createElement('h3');\r\n                    title.textContent = 'Clinical signs'\r\n                    clinicalSymptomsOptionsContainer.appendChild(title)\r\n\r\n                    uniqueClinicalSymptoms.forEach(symptom => {\r\n                    const radioContainer = document.createElement('div');\r\n                    radioContainer.setAttribute('class', 'radioContainer')\r\n        \r\n                    const radioInput = document.createElement('input');\r\n                    radioInput.type = 'radio';\r\n                    radioInput.name = 'symptom';\r\n                    radioInput.id = symptom;\r\n                    radioInput.value = symptom;\r\n        \r\n                    const inputLabel = document.createElement('label');\r\n                    inputLabel.textContent = symptom;\r\n                    inputLabel.setAttribute(\"for\", symptom)\r\n        \r\n                    radioContainer.appendChild(radioInput);\r\n                    radioContainer.appendChild(inputLabel);\r\n        \r\n                    clinicalSymptomsOptionsContainer.appendChild(radioContainer);\r\n                    });\r\n                }else{ //if the cliniczl symptoms are emtpy, check if there are durations\r\n                    if(uniqueDurations[0] !=\"\"){\r\n                        \r\n                        //create a title for the model container\r\n                        let title = document.createElement('h3');\r\n                        title.textContent = 'Model'\r\n                        durationOptionsContainer.appendChild(title)\r\n                        \r\n                        uniqueDurations.forEach(duration => {\r\n                        const radioContainer = document.createElement('div');\r\n                        radioContainer.setAttribute('class', 'radioContainer')\r\n            \r\n                        const radioInput = document.createElement('input');\r\n                        radioInput.type = 'radio';\r\n                        radioInput.name = 'duration';\r\n                        radioInput.id = duration;\r\n                        radioInput.value = duration;\r\n            \r\n                        const inputLabel = document.createElement('label');\r\n                        inputLabel.textContent = duration;\r\n                        inputLabel.setAttribute(\"for\", duration)\r\n            \r\n                        radioContainer.appendChild(radioInput);\r\n                        radioContainer.appendChild(inputLabel);\r\n            \r\n                        durationOptionsContainer.appendChild(radioContainer);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n      });\r\n\r\n\r\n\r\n//set subtype options\r\n      // Event listener for model selection\r\n      modelOptionsContainer.addEventListener('change', () => {\r\n        // Clear previous options\r\n        subtypeOptionsContainer.innerHTML = '';\r\n        clinicalSymptomsOptionsContainer.innerHTML = '';\r\n        durationOptionsContainer.innerHTML = '';\r\n\r\n        //clear results section\r\n        clearResultsCont()\r\n\r\n        // Get the selected model and type\r\n        const selectedType = selectTypeElement.value;\r\n        \r\n        let selectedModel='';  //need to do try catch because sometimes there is no model selected (model is same as type)\r\n        try {\r\n            selectedModel = modelOptionsContainer.querySelector('input[name=\"model\"]:checked').value;\r\n        } catch (error) {\r\n            selectedModel = selectTypeElement.value;\r\n        }\r\n        \r\n\r\n        // Filter procedures based on the selected type and model\r\n        const filteredProcedures = procedures.filter(procedure => procedure.type === selectedType && procedure.model ===selectedModel);\r\n\r\n        // Extract unique values from all columns of filtered procedures\r\n        const uniqueSubtypes = [...new Set(filteredProcedures.map(procedure => procedure.subcategory))];\r\n        const uniqueClinicalSymptoms = [...new Set(filteredProcedures.map(procedure => procedure.clinicalSymptoms))];\r\n        const uniqueDurations = [...new Set(filteredProcedures.map(procedure => procedure.duration))];\r\n\r\n\r\n        //display submit button?\r\n        displayGetSeverityButton()\r\n\r\n\r\n        // Generate radios for unique subtypes\r\n        \r\n        if(uniqueSubtypes[0] !=\"\" && selectedModel !== uniqueSubtypes[0] ){\r\n            \r\n            //create a title for the container\r\n            let title = document.createElement('h3');\r\n            title.textContent = 'Subtype'\r\n            subtypeOptionsContainer.appendChild(title)\r\n\r\n            uniqueSubtypes.forEach(subtype => {\r\n            const radioContainer = document.createElement('div');\r\n            radioContainer.setAttribute('class', 'radioContainer')\r\n\r\n            const radioInput = document.createElement('input');\r\n            radioInput.type = 'radio';\r\n            radioInput.name = 'subtype';\r\n            radioInput.id = subtype;\r\n            radioInput.value = subtype;\r\n\r\n            const inputLabel = document.createElement('label');\r\n            inputLabel.textContent = subtype;\r\n            inputLabel.setAttribute('for', subtype)\r\n\r\n            radioContainer.appendChild(radioInput);\r\n            radioContainer.appendChild(inputLabel);\r\n\r\n            subtypeOptionsContainer.appendChild(radioContainer);\r\n        });\r\n        }else{ //if subtypes are empty, check if there are clinical symptoms or subcategories\r\n\r\n            if(uniqueClinicalSymptoms[0] !=\"\"){\r\n\r\n                //create a title for the container\r\n                let title = document.createElement('h3');\r\n                title.textContent = 'Clinical signs'\r\n                clinicalSymptomsOptionsContainer.appendChild(title)\r\n\r\n\r\n                uniqueClinicalSymptoms.forEach(symptom => {\r\n                const radioContainer = document.createElement('div');\r\n                radioContainer.setAttribute('class', 'radioContainer')\r\n    \r\n                const radioInput = document.createElement('input');\r\n                radioInput.type = 'radio';\r\n                radioInput.name = 'symptom';\r\n                radioInput.id = symptom;\r\n                radioInput.value = symptom;\r\n    \r\n                const inputLabel = document.createElement('label');\r\n                inputLabel.textContent = symptom;\r\n                inputLabel.setAttribute(\"for\", symptom)\r\n    \r\n                radioContainer.appendChild(radioInput);\r\n                radioContainer.appendChild(inputLabel);\r\n    \r\n                clinicalSymptomsOptionsContainer.appendChild(radioContainer);\r\n                });\r\n            }else{ //if the cliniczl symptoms are emtpy, check if there are durations\r\n                if(uniqueDurations[0] !=\"\"){\r\n\r\n                    //create a title for the container\r\n                    let title = document.createElement('h3');\r\n                    title.textContent = 'Clinical signs'\r\n                    durationOptionsContainer.appendChild(title)\r\n\r\n                    uniqueDurations.forEach(duration => {\r\n                    const radioContainer = document.createElement('div');\r\n                    radioContainer.setAttribute('class', 'radioContainer')\r\n        \r\n                    const radioInput = document.createElement('input');\r\n                    radioInput.type = 'radio';\r\n                    radioInput.name = 'duration';\r\n                    radioInput.id = duration;\r\n                    radioInput.value = duration;\r\n        \r\n                    const inputLabel = document.createElement('label');\r\n                    inputLabel.textContent = duration;\r\n                    inputLabel.setAttribute(\"for\", duration)\r\n        \r\n                    radioContainer.appendChild(radioInput);\r\n                    radioContainer.appendChild(inputLabel);\r\n        \r\n                    durationOptionsContainer.appendChild(radioContainer);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n//set symptoms options\r\n      // Event listener for model selection\r\n      subtypeOptionsContainer.addEventListener('change', () => {\r\n        \r\n        // Clear previous options\r\n        clinicalSymptomsOptionsContainer.innerHTML = '';\r\n        durationOptionsContainer.innerHTML = '';\r\n\r\n        //clear results section\r\n        clearResultsCont()\r\n\r\n\r\n        // Get the selected model, type and subtype\r\n        const selectedType = selectTypeElement.value;\r\n        \r\n        let selectedModel='';  //need to do try catch because sometimes there is no model selected (model is same as type)\r\n        try {\r\n            selectedModel = modelOptionsContainer.querySelector('input[name=\"model\"]:checked').value;\r\n        } catch (error) {\r\n            selectedModel = selectTypeElement.value;\r\n        }\r\n        \r\n        let  selectedSubtype ='';\r\n        try {\r\n            selectedSubtype = subtypeOptionsContainer.querySelector('input[name=\"subtype\"]:checked').value;\r\n        } catch (error) {\r\n            selectedSubtype = selectedModel\r\n        }\r\n        \r\n        \r\n        // Filter procedures based on the selected type\r\n        const filteredProcedures = procedures.filter(procedure => procedure.type === selectedType \r\n                                                        && procedure.model ===selectedModel\r\n                                                        && procedure.subcategory === selectedSubtype);\r\n\r\n        // Extract unique values from all columns of filtered procedures\r\n        const uniqueClinicalSymptoms = [...new Set(filteredProcedures.map(procedure => procedure.clinicalSymptoms))];\r\n        const uniqueDurations = [...new Set(filteredProcedures.map(procedure => procedure.duration))];\r\n\r\n        //display submit button?\r\n        displayGetSeverityButton()\r\n\r\n\r\n        // Generate radios for unique symptoms\r\n        if(uniqueClinicalSymptoms[0] !=\"\"){\r\n\r\n            //create a title for the container\r\n            let title = document.createElement('h3');\r\n            title.textContent = 'Clinical signs'\r\n            clinicalSymptomsOptionsContainer.appendChild(title)\r\n\r\n            uniqueClinicalSymptoms.forEach(symptom => {\r\n            const radioContainer = document.createElement('div');\r\n            radioContainer.setAttribute('class', 'radioContainer')\r\n\r\n            const radioInput = document.createElement('input');\r\n            radioInput.type = 'radio';\r\n            radioInput.name = 'symptom';\r\n            radioInput.id = symptom;\r\n            radioInput.value = symptom;\r\n\r\n            const inputLabel = document.createElement('label');\r\n            inputLabel.textContent = symptom;\r\n            inputLabel.setAttribute(\"for\", symptom)\r\n\r\n            radioContainer.appendChild(radioInput);\r\n            radioContainer.appendChild(inputLabel);\r\n\r\n            clinicalSymptomsOptionsContainer.appendChild(radioContainer);\r\n            });\r\n        }else{ //if the cliniczl symptoms are emtpy, check if there are durations\r\n            \r\n            if(uniqueDurations[0] !=\"\"){\r\n\r\n                //create a title for the container\r\n                let title = document.createElement('h3');\r\n                title.textContent = 'Duration'\r\n                durationOptionsContainer.appendChild(title)\r\n\r\n                uniqueDurations.forEach(duration => {\r\n                const radioContainer = document.createElement('div');\r\n                radioContainer.setAttribute('class', 'radioContainer')\r\n    \r\n                const radioInput = document.createElement('input');\r\n                radioInput.type = 'radio';\r\n                radioInput.name = 'duration';\r\n                radioInput.id = duration;\r\n                radioInput.value = duration;\r\n    \r\n                const inputLabel = document.createElement('label');\r\n                inputLabel.textContent = duration;\r\n                inputLabel.setAttribute(\"for\", duration)\r\n    \r\n                radioContainer.appendChild(radioInput);\r\n                radioContainer.appendChild(inputLabel);\r\n    \r\n                durationOptionsContainer.appendChild(radioContainer);\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n//set duration options\r\n      // Event listener for model selection\r\n      clinicalSymptomsOptionsContainer.addEventListener('change', () => {\r\n        // Clear previous options\r\n        durationOptionsContainer.innerHTML = '';\r\n        removeTitle(durationOptionsContainer);\r\n\r\n        //clear results section\r\n        clearResultsCont()\r\n\r\n        // Get the selected model, type and subtype\r\n        const selectedType = selectTypeElement.value;\r\n\r\n        let selectedModel='';  //need to do try catch because sometimes there is no model selected (model is same as type)\r\n        try {\r\n            selectedModel = modelOptionsContainer.querySelector('input[name=\"model\"]:checked').value;\r\n        } catch (error) {\r\n            selectedModel = selectTypeElement.value;\r\n        }\r\n        \r\n        let  selectedSubtype ='';\r\n        try {\r\n            selectedSubtype = subtypeOptionsContainer.querySelector('input[name=\"subtype\"]:checked').value;\r\n        } catch (error) {\r\n            selectedSubtype = selectedModel\r\n        }\r\n\r\n        let selectedClinicalSymptoms ='';\r\n        try {\r\n            selectedClinicalSymptoms = clinicalSymptomsOptionsContainer.querySelector('input[name=\"symptom\"]:checked').value;\r\n        } catch (error) {\r\n            console.log(\"error - no clinical symptoms checked\")\r\n        }\r\n\r\n\r\n        // Filter procedures based on the selected type\r\n        const filteredProcedures = procedures.filter(procedure => procedure.type === selectedType \r\n                                                        && procedure.model ===selectedModel\r\n                                                        && procedure.subcategory === selectedSubtype\r\n                                                        && procedure.clinicalSymptoms === selectedClinicalSymptoms);\r\n\r\n        // Extract unique values from all columns of filtered procedures\r\n        const uniqueDurations = [...new Set(filteredProcedures.map(procedure => procedure.duration))];\r\n        const uniqueClinicalSymptoms = [...new Set(filteredProcedures.map(procedure => procedure.clinicalSymptoms))];\r\n\r\n        \r\n        //display submit button?\r\n        displayGetSeverityButton()\r\n\r\n\r\n        // Generate radios for unique durations\r\n        if(uniqueDurations[0] !=\"\"){\r\n\r\n            //create a title for the container\r\n            let title = document.createElement('h3');\r\n            title.textContent = 'Duration'\r\n            durationOptionsContainer.appendChild(title)\r\n\r\n            uniqueDurations.forEach(duration => {\r\n                const radioContainer = document.createElement('div');\r\n                radioContainer.setAttribute('class', 'radioContainer')\r\n\r\n                const radioInput = document.createElement('input');\r\n                radioInput.type = 'radio';\r\n                radioInput.name = 'duration';\r\n                radioInput.id = duration;\r\n                radioInput.value = duration;\r\n\r\n                const inputLabel = document.createElement('label');\r\n                inputLabel.textContent = duration;\r\n                inputLabel.setAttribute(\"for\", duration)\r\n\r\n                radioContainer.appendChild(radioInput);\r\n                radioContainer.appendChild(inputLabel);\r\n\r\n                durationOptionsContainer.appendChild(radioContainer);\r\n            });\r\n        }else{\r\n            // don't check for clinical sign because that gives a bug\r\n        }\r\n        \r\n    })\r\n\r\n\r\n    // event listener for duration\r\n    durationOptionsContainer.addEventListener('change', () =>{\r\n        //display submit button?\r\n        displayGetSeverityButton()\r\n\r\n        //clear results section\r\n        clearResultsCont()\r\n    })\r\n\r\n\r\n\r\n//eventlistener for reset button\r\n    clearButton.addEventListener('click', ()=>{\r\n        selectTypeElement.value = \"Select an option\"\r\n        modelOptionsContainer.innerHTML = '';\r\n        subtypeOptionsContainer.innerHTML = '';\r\n        clinicalSymptomsOptionsContainer.innerHTML = '';\r\n        durationOptionsContainer.innerHTML = '';\r\n\r\n        displayGetSeverityButton();\r\n\r\n        //clear results section\r\n        clearResultsCont()\r\n    })\r\n\r\n\r\n\r\n//function - get the input and check f this returns one line or not, if yes, display the button and add the eventlistener for when clicked\r\nfunction displayGetSeverityButton(){\r\n    // Get the selected type, model, subtype, clinical symptoms and duration\r\n    let selectedType = selectTypeElement.value;\r\n\r\n    let selectedModel='';\r\n    try {\r\n        selectedModel = modelOptionsContainer.querySelector('input[name=\"model\"]:checked').value;\r\n    } catch (error) {\r\n        selectedModel = selectTypeElement.value;\r\n    }\r\n    \r\n    let  selectedSubtype ='';\r\n    try {\r\n        selectedSubtype = subtypeOptionsContainer.querySelector('input[name=\"subtype\"]:checked').value;\r\n    } catch (error) {\r\n        selectedSubtype = selectedModel\r\n    }\r\n\r\n    let selectedClinicalSymptoms ='';\r\n    try {\r\n        selectedClinicalSymptoms = clinicalSymptomsOptionsContainer.querySelector('input[name=\"symptom\"]:checked').value;\r\n    } catch (error) {\r\n        console.log(\"no clinical symptoms checked\")\r\n    }\r\n\r\n    let selectedDuration ='';\r\n    try {\r\n        selectedDuration = durationOptionsContainer.querySelector('input[name=\"duration\"]:checked').value;\r\n    } catch (error) {\r\n        console.log(\"no duration checked\")\r\n    }\r\n\r\n    // Filter procedures based on the selections\r\n    const filteredProcedures = procedures.filter(procedure => \r\n        procedure.type === selectedType \r\n        && procedure.model ===selectedModel\r\n        && procedure.subcategory === selectedSubtype\r\n        && procedure.clinicalSymptoms === selectedClinicalSymptoms\r\n        && procedure.duration === selectedDuration);\r\n    \r\n    //check if button needs to be created or deleted, if created, check if there already is one or not\r\n    try {\r\n        console.log(filteredProcedures[0].type)\r\n        try { //check if there already is a submit button . if yes, don't do anything, otherwise, create the button\r\n            let btn = document.getElementById('getSeverity');\r\n            let btnDiv = document.getElementById('btnDiv')\r\n            btnDiv.removeChild(btn)\r\n\r\n            displayGetSeverityButton()\r\n        } catch (error) {\r\n            //create submit button\r\n            let btnDiv = document.getElementById('btnDiv')\r\n            let btn = document.createElement('input')\r\n            btn.setAttribute('type', 'button')\r\n            btn.setAttribute('value', 'Get severity score')\r\n            btn.setAttribute('id', 'getSeverity')\r\n\r\n            btnDiv.prepend(btn)\r\n\r\n            //add eventlistener for the get severity button\r\n            btn.addEventListener('click', (e)=>{\r\n                 e.preventDefault();\r\n\r\n                //clear previous results\r\n                clearResultsCont();\r\n\r\n                // Get the selected type, model, subtype, clinical symptoms and duration\r\n                let selectedType = selectTypeElement.value;\r\n\r\n                let selectedModel='';\r\n                try {\r\n                    selectedModel = modelOptionsContainer.querySelector('input[name=\"model\"]:checked').value;\r\n                } catch (error) {\r\n                    selectedModel = selectTypeElement.value;\r\n                }\r\n                \r\n                let  selectedSubtype ='';\r\n                try {\r\n                    selectedSubtype = subtypeOptionsContainer.querySelector('input[name=\"subtype\"]:checked').value;\r\n                } catch (error) {\r\n                    selectedSubtype = selectedModel\r\n                }\r\n\r\n                let selectedClinicalSymptoms ='';\r\n                try {\r\n                    selectedClinicalSymptoms = clinicalSymptomsOptionsContainer.querySelector('input[name=\"symptom\"]:checked').value;\r\n                } catch (error) {\r\n                    console.log(\"no clinical symptoms checked\")\r\n                }\r\n\r\n                let selectedDuration ='';\r\n                try {\r\n                    selectedDuration = durationOptionsContainer.querySelector('input[name=\"duration\"]:checked').value;\r\n                } catch (error) {\r\n                    console.log(\"no duration checked\")\r\n                }\r\n\r\n                // Filter procedures based on the selections\r\n                const filteredProcedures = procedures.filter(procedure => \r\n                    procedure.type === selectedType \r\n                    && procedure.model ===selectedModel\r\n                    && procedure.subcategory === selectedSubtype\r\n                    && procedure.clinicalSymptoms === selectedClinicalSymptoms\r\n                    && procedure.duration === selectedDuration);\r\n\r\n                //get severity and comments of the selection and the containers to display them\r\n                let severity = filteredProcedures[0].severityScore;\r\n                let comment1 = filteredProcedures[0].comment1;\r\n                let comment2 = filteredProcedures[0].comment2;\r\n                let comment3 = filteredProcedures[0].comment3;\r\n                \r\n                console.log(filteredProcedures[0] )\r\n                console.log(comment1, comment2,comment3 )\r\n\r\n                let resultsContainer = document.getElementById('results-container')\r\n                let severityScoreContainer = document.getElementById('severity-score')\r\n                let selectionsContainer = document.getElementById('selections')\r\n                let typeContainer = document.getElementById('type')\r\n                let modelContainer = document.getElementById('model')\r\n                let subtypeContainer = document.getElementById('subtype')\r\n                let clinicalSymptomsContainer = document.getElementById('clinical-symptoms')\r\n                let durationContainer = document.getElementById('duration')\r\n                let commentsContainer = document.getElementById('comments')\r\n                let returnBtnContainer = document.getElementById('returnBtn')\r\n                \r\n          \r\n                //dislay the selections of they are not undefined\r\n                prependElement('Details of the selected procedure', 'h3', selectionsContainer)\r\n                appendElement('Procedure type', 'h4', typeContainer)\r\n                appendElement(selectedType, 'p', typeContainer) \r\n                \r\n                if(!(selectedModel == '' || selectedModel == selectedType)){\r\n                    appendElement('Model', 'h4', modelContainer)\r\n                    appendElement(selectedModel, 'p', modelContainer) \r\n                }\r\n                \r\n                if(!(selectedSubtype == '' || selectedSubtype == selectedModel)){\r\n                    appendElement('Subtype', 'h4', subtypeContainer)\r\n                    appendElement(selectedSubtype, 'p', subtypeContainer) \r\n                }\r\n                \r\n                if(!(selectedClinicalSymptoms == '' || selectedClinicalSymptoms == selectedSubtype)){\r\n                    appendElement('Clinical signs', 'h4', clinicalSymptomsContainer)\r\n                    appendElement(selectedClinicalSymptoms, 'p', clinicalSymptomsContainer) \r\n                }\r\n            \r\n                if(!(selectedDuration == '' || selectedDuration == selectedClinicalSymptoms)){\r\n                    appendElement('Duration', 'h4', durationContainer)\r\n                    appendElement(selectedDuration, 'p', durationContainer) \r\n                }\r\n\r\n                //if they are not undefined or empty, create a p element for them and append them to the results container\r\n                if(severity !== '' && severity !== undefined ){\r\n                    prependElement('Severity Score', 'h3', severityScoreContainer)\r\n                    appendElement(severity, 'p', severityScoreContainer);\r\n                }\r\n                if(comment1 !== '' && comment1 !== undefined){\r\n                    prependElement('Comments and Remarks', 'h3', commentsContainer)\r\n                    appendElement(comment1, 'p', commentsContainer);\r\n                }\r\n                if(comment2 !== '' && comment2 !== undefined){\r\n                    appendElement(comment2, 'p', commentsContainer);\r\n                }\r\n                if(comment3 !== '' && comment3 !== undefined){\r\n                    appendElement(comment3, 'p', commentsContainer);\r\n                }\r\n\r\n                console.log(comment1, comment2,comment3 )\r\n\r\n                \r\n                // Get the modal\r\n                var modal = document.getElementById(\"myModal\");\r\n\r\n                // Get the <span> element that closes the modal\r\n                var span = document.getElementsByClassName(\"close\")[0];\r\n\r\n                // When the user clicks on the button, open the modal\r\n                \r\n                modal.classList.remove('hidden')\r\n                \r\n\r\n                // When the user clicks on <span> (x), close the modal\r\n                span.onclick = function() {\r\n                modal.classList.add('hidden')\r\n                }\r\n\r\n                // When the user clicks anywhere outside of the modal, close it\r\n                window.onclick = function(event) {\r\n                if (event.target == modal) {\r\n                    modal.classList.add('hidden')\r\n                }\r\n                }\r\n                \r\n\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        try {\r\n            let btnDiv = document.getElementById('btnDiv')\r\n            let btn = document.getElementById('getSeverity')\r\n\r\n            btnDiv.removeChild(btn)\r\n        } catch (error) {\r\n            //there is no button\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n    })\r\n    .catch(error => {\r\n      console.log('Error:', error);\r\n    });\r\n\r\n  }); //end of window event listener\r\n  \r\n\r\n\r\n  // Function to remove the title from a container if it exists\r\n    function removeTitle(container) {\r\n        const title = container.querySelector('h3');\r\n        if (title) {\r\n        container.removeChild(title);\r\n        }\r\n    }\r\n\r\n\r\n//function to create an element and to append to a container\r\nfunction appendElement(value, elementType, container){\r\n    let element = document.createElement(elementType);\r\n    element.innerHTML = value;\r\n    container.appendChild(element);\r\n}\r\n\r\n//function to create an element and to prepend to a container\r\nfunction prependElement(value, elementType, container){\r\n    let element = document.createElement(elementType);\r\n    element.innerHTML = value;\r\n    container.prepend(element);\r\n}\r\n\r\n\r\n//function to clear the results container\r\nfunction clearResultsCont() {\r\n    let modalHeader = document.getElementById(\"modalHeader\")\r\n    modalHeader.innerHTML = `<div class=\"severity-score\" id=\"severity-score\"></div>\r\n    <span class=\"close\">&times;</span>`\r\n\r\n    let modalBody = document.getElementById(\"modalBody\")\r\n    modalBody.innerHTML = `<div class=\"selections\" id=\"selections\">\r\n    <div id=\"type\">\r\n    </div>\r\n    <div id=\"model\">\r\n    </div>\r\n    <div id=\"subtype\">\r\n    </div>\r\n    <div id=\"clinical-symptoms\">\r\n    </div>\r\n    <div id=\"duration\">\r\n    </div>\r\n    </div>                     \r\n    <div class=\"comments\" id=\"comments\"></div>`\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/js/index.js?");

/***/ }),

/***/ "./src/img/background_contact.jpg":
/*!****************************************!*\
  !*** ./src/img/background_contact.jpg ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"img/background_contact.jpg\";\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/img/background_contact.jpg?");

/***/ }),

/***/ "./src/img/background_mouse.jpg":
/*!**************************************!*\
  !*** ./src/img/background_mouse.jpg ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"img/background_mouse.jpg\";\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/img/background_mouse.jpg?");

/***/ }),

/***/ "./src/img/background_references.jpg":
/*!*******************************************!*\
  !*** ./src/img/background_references.jpg ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"img/background_references.jpg\";\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/img/background_references.jpg?");

/***/ }),

/***/ "./src/img/logo_onderzoek.jpg":
/*!************************************!*\
  !*** ./src/img/logo_onderzoek.jpg ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"img/logo_onderzoek.jpg\";\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/img/logo_onderzoek.jpg?");

/***/ }),

/***/ "./src/img/references/logo_norecopa.jpg":
/*!**********************************************!*\
  !*** ./src/img/references/logo_norecopa.jpg ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"img/logo_norecopa.jpg\";\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/img/references/logo_norecopa.jpg?");

/***/ }),

/***/ "./src/img/vub_sponsor_logo_digitaal.jpg":
/*!***********************************************!*\
  !*** ./src/img/vub_sponsor_logo_digitaal.jpg ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"img/vub_sponsor_logo_digitaal.jpg\";\n\n//# sourceURL=webpack://15.-severity-assessment-tool/./src/img/vub_sponsor_logo_digitaal.jpg?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"index": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;